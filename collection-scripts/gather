#!/bin/bash

source $(dirname "$0")/common.sh
get_log_collection_args

# Store PIDs of all the subprocesses
pids=()

# Named resource list, eg. ns/openshift-config
named_resources=()

# Resource groups list, eg. pods
group_resources=()

# Resources to gather with `--all-namespaces` option
all_ns_resources=()

# Cluster Version Information
named_resources+=(ns/kube-system)

# Operator and APIService Resources
group_resources+=(apiservices)

# Certificate Resources
group_resources+=(certificatesigningrequests)

# Machine/Node Resources
group_resources+=(nodes)

# Namespaces/Project Resources
named_resources+=(ns/default)

# Storage Resources
group_resources+=(storageclasses persistentvolumes volumeattachments csidrivers csinodes volumesnapshotclasses volumesnapshotcontents)
all_ns_resources+=(csistoragecapacities)

# Leases
all_ns_resources+=(leases)

# Run the Collection of Resources using inspect
# running across all-namespaces for the few "Autoscaler" resources.
oc adm inspect ${log_collection_args} --dest-dir must-gather --rotated-pod-logs "${named_resources[@]}" &
pids+=($!)

filtered_group_resources=()
for gr in "${group_resources[@]}"
do
  oc get "$gr" > /dev/null 2>&1
  if [[ "$?" -eq 0 ]]; then
    filtered_group_resources+=("$gr")
  fi
done
group_resources_text=$(IFS=, ; echo "${filtered_group_resources[*]}")
oc adm inspect ${log_collection_args} --dest-dir must-gather --rotated-pod-logs "${group_resources_text}" &
pids+=($!)

oc adm inspect ${log_collection_args} --dest-dir must-gather --rotated-pod-logs "${all_ns_resources[@]}" --all-namespaces &
pids+=($!)

# Gather API Priority and Fairness Endpoints
# /usr/bin/gather_priority_and_fairness &
# pids+=($!)

# Gather etcd information
# /usr/bin/gather_etcd &
# pids+=($!)

# Gather kas startup and termination logs
# /usr/bin/gather_kas_startup_termination_logs &
# pids+=($!)

# Check if PID array has any values, if so, wait for them to finish
if [ ${#pids[@]} -ne 0 ]; then
    echo "Waiting on subprocesses to finish execution."
    wait "${pids[@]}"
fi

# force disk flush to ensure that all data gathered is accessible in the copy container
sync
